{
  // .JSHINTRC
  // Base JavaScript linting options for my projects.
  // Using jshint v2.5.2

  // RULES
  "laxcomma":       true,   // allow comma first style
  "es3":            true,   // when old IE browsers needs to be supported
  "bitwise":        true,   // prohibits the use of bitwise operators such as ^ (XOR), | (OR) and others
  //"camelcase":    true,   // force all variable names to use either camelCase style or UPPER_CASE with underscores
  "curly":          true,   // requires you to always put curly braces around blocks in loops and conditionals
  "eqeqeq":         true,   // prohibits the use of == and != in favor of === and !==
  "forin":          true,   // requires all `for in` loops to filter object's items with `hasOwnProperty()`
  "immed":          true,   // prohibits the use of immediate function invocations without wrapping them in parentheses
  "indent":         2,      // enforces specific tab width
  "latedef":        true,   // prohibits the use of a variable before it was defined
  "newcap":         true,   // requires you to capitalize names of constructor functions
  "noarg":          true,   // prohibits the use of `arguments.caller` and `arguments.callee`
  "noempty":        true,   // warns when you have an empty block in your code
  "nonew":          true,   // prohibits the use of constructor functions for side-effects
  "plusplus":       false,  // prohibits the use of unary increment and decrement operators
  "quotmark":       true,   // enforces the consistency of quotation marks used throughout your code
  "undef":          true,   // prohibits the use of explicitly undeclared variables
  "unused":         true,   // warns when you define and never use your variables
  "strict":         true,   // requires all functions to run in ECMAScript 5's strict mode
  "trailing":       true,   // makes it an error to leave a trailing whitespace in your code
  "maxparams":      4,      // set the max number of formal parameters allowed per function
  "maxdepth":       3,      // control how nested do you want your blocks to be
  "maxcomplexity":  10,      // control cyclomatic complexity throughout your code
  "maxlen":         120,     // set the maximum length of a line

  // ENVIRONMENTS
  "devel":          true,   // Enable poor mans debug (console, alerts etc.)
  "jquery":         true,   // defines globals exposed by jQuery
  "node":           true,   // defines nodejs globals
  "browser":        true,   // defines browser globals
  "nonstandard":    false   //
  "globals": {
    "ko":           true,   // defines globals exposed by Knockoutjs
    "_":            true    // defines globals exposed by lodash/underscore
  }

}